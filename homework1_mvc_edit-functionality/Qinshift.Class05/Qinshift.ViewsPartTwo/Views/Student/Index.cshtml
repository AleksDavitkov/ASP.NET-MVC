@* @model List<Qinshift.ViewsPartTwo.Models.ViewModels.StudentViewModel> *@
@model List<StudentViewModel>
@{
	ViewData["Title"] = "Students";
	string pageTitle = "All Students";
}

@* This is a comment *@

<div class="container mt-5">
	<h2 class="mb-4">@pageTitle</h2>

	<form asp-action="Index" method="get" class="mb-4">
	    <div class="input-group">
	        <input type="text" 
	               name="search" 
	               value="@ViewBag.SearchQuery" 
	               class="form-control" 
	               placeholder="Search by first name, last name, or course..." />
	        <button type="submit" class="btn btn-outline-primary">Search</button>
			@* Clear search button *@
			<a href="@Url.Action("Index", "Student")" class="btn btn-outline-secondary ms-2">Clear</a>
	    </div>
	</form>

	@if (ViewBag.WelcomeMessage != null)
	{
		<div class="alert alert-warning mb-3">
			<strong>@ViewBag.WelcomeMessage</strong>
		</div>
	}

	@if (TempData.TryGetValue("FormMessage", out var formMessage))
	{
		<h4 class="text-success mt-2 mb-3">@formMessage</h4>
	}

	<table class="table table-bordered table-striped">
		<thead class="text-warning bg-white">
			<tr>
				<th>Full Name</th>
				<th>Age</th>
				<th>Active Course</th>
				<th>Action</th>
			</tr>
		</thead>
		<tbody>
			@foreach (StudentViewModel student in Model)
			{
				<tr>
					<td>@student.FullName</td>
					<td>@student.Age</td>
					@* @if (student.ActiveCourseName == "No Course")
					{
						<td class="text-danger">@student.ActiveCourseName</td>
					}
					else
					{
						<td>@student.ActiveCourseName</td>
					} *@
					<td class="@(student.ActiveCourseName == "No Course" ? "text-danger" : string.Empty)">@student.ActiveCourseName</td>
					<td>
						@* Edit*@
						<a 
						asp-controller="Student"
						asp-action="Edit"
						asp-route-studentId="@student.Id"
						class="btn btn-sm btn-outline-primary me-2">
						Edit
						</a>
						@* Delete Bonus*@
						<form asp-controller="Student"
						 asp-action="Delete"
						 asp-route-studentId="@student.Id"
						method="post"
						class="d-inline"
						onsubmit="return confirm('Are you sure you want to delete this student?');">
						<button type="submit" class="btn btn-sm btn-outline-danger">Delete</button>
						</form>
					</td>
				</tr>
			}
		</tbody>
	</table>

	<div class="mt-4">
		<!-- Raw HTML link to Create Student action -->
		<a href="/Student/Create" class="btn btn-outline-danger">Create Student (HTML Link)</a>

		<!-- Html Helper link -->
		<div class="mt-3">
			@Html.ActionLink(
							linkText: "Create Student (HTML Helper)",
							actionName: "Create",
							controllerName: "Student",
							routeValues: null,
							htmlAttributes: new { @class = "btn btn-outline-success" }
							)
		</div>

		<!-- Tag Helper link -->
		<div class="mt-3">
			<a asp-controller="Student" asp-action="Create" class="btn btn-outline-warning">Create Student (Tag Helper)</a>
			<a asp-controller="Home" asp-action="Index" class="btn btn-warning">Go Home</a>
		</div>
	</div>

	<p class="mt-3">
		Today's Date: @ViewData["CurrentDate"]
	</p>
</div>
