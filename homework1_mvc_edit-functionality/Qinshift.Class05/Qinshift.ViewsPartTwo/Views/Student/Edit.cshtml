@model EditStudentViewModel

@{
    ViewData["Title"] = "Edit Student";
}

<div class="container mt-5">
    <h2 class="mb-4 text-primary">Edit Student</h2>

    @if (TempData["FormMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["FormMessage"]
        </div>
    }

    <form asp-action="Edit" asp-controller="Student" method="post">
        <input type="hidden" asp-for="Id" />

        <div class="mb-3">
            <label asp-for="FirstName" class="form-label"></label>
            <input asp-for="FirstName" class="form-control" />
            <span asp-validation-for="FirstName" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="LastName" class="form-label"></label>
            <input asp-for="LastName" class="form-control" />
            <span asp-validation-for="LastName" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="DateOfBirth" class="form-label"></label>
            <input asp-for="DateOfBirth" class="form-control" type="date" />
            <span asp-validation-for="DateOfBirth" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="ActiveCourseId" class="form-label"></label>
            <select asp-for="ActiveCourseId" class="form-select"
                    asp-items="@(new SelectList(Model.Courses, "Id", "Name"))">
                <option value="">-- No Course Selected --</option>
            </select>
            <span asp-validation-for="ActiveCourseId" class="text-danger"></span>
        </div>

        <div class="mt-4">
            <button type="submit" class="btn btn-outline-primary">Save Changes</button>
            <a asp-action="Index" class="btn btn-outline-secondary ms-2">Cancel</a>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial"); // This makes sure EditStudentViewModel restrictions work, so user won't break the form
    }
}